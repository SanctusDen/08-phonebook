{"version":3,"file":"static/js/623.d600f95e.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/ContactForm/ContactForm-module.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/List/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/List/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 2px;\n  width: 300px;\n`;\nexport const FilterField = styled.input`\n  width: 98%;\n  margin-top: 12px;\n\n  border: none;\n  background: inherit;\n  border-bottom: 2px solid #000;\n  text-align: center;\n  outline: none;\n\n  font-size: 22px;\n`;\n\nexport const FormLabelLogin = styled.label`\n  text-align: center;\n  width: 300px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactsForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 12px;\n`;\n\nexport const Field = styled.input`\n  margin-bottom: 20px;\n  border: none;\n  background: inherit;\n  border-bottom: 2px solid #000;\n  text-align: center;\n  outline: none;\n\n  font-size: 22px;\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 30px;\n  border-radius: 8px;\n  border: 2px solid black;\n  font-weight: 600;\n  cursor: pointer;\n  color: black;\n  background-color: inherit;\n\n  &:hover,\n  &:focus {\n    color: white;\n    transition: all 0.3ms cubic-bez;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  border-radius: 8px;\n  padding: 4px;\n`;\n","// import { createSelector } from '@reduxjs/toolkit';\n// import { rootReducers } from './store';\n\n// const selectRoot = createSelector(rootReducers, state => state.contacts);\n\n// export const selectFilter = (selectRoot, contacts => contacts.filter);\n\n// export const selectContacts = createSelector(\n//   selectRoot,\n//   contacts => contacts.contacts.items\n// );\n\n// export const selectIsLoading = createSelector(\n//   selectRoot,\n//   contacts => contacts.contacts.isLoading\n// );\n\n// export const selectError = createSelector(\n//   selectRoot,\n//   contacts => contacts.contacts.error\n// );\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.contacts.filter;\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\n\nimport { Label, Field, SubmitBtn, Form } from './ContactForm-module';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/ContactFormReducer';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setContact(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isExist = contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContacts({ ...contact }));\n\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Field\n        onChange={handleChange}\n        value={contact.name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"number\">Number</Label>\n      <Field\n        onChange={handleChange}\n        value={contact.number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <SubmitBtn type=\"submit\">Add Contact</SubmitBtn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/ContactFormReducer';\n\nimport { FilterField, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <>\n      <FilterLabel>Find contacts by name</FilterLabel>\n      <FilterField onChange={handleFilterChange} />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding-left: 0;\n  list-style: none;\n\n  overflow: auto;\n  max-height: 720px;\n  height: auto;\n\n  li:nth-of-type(even) {\n    background-color: #4e7b9e;\n    color: #fff;\n  }\n  li {\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      transform: translate(6px, -6px);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 12px;\n`;\nexport const DeleteBtn = styled.button`\n  width: 100px;\n  height: 30px;\n  border-radius: 8px;\n\n  border: 1px solid black;\n  font-weight: 600;\n  cursor: pointer;\n  background-color: inherit;\n  color: black;\n  margin-right: 6px;\n  &:hover,\n  &:focus {\n    color: white;\n  }\n`;\nexport const Name = styled.p`\n  display: inline-block;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/ContactFormReducer';\nimport { DeleteBtn, Item, Name } from './Contact.styled';\n\nexport const Contact = ({ name, number, id, phone }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item key={id}>\n      <Name>\n        {name}: {number || phone}\n      </Name>\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { requestContacts } from 'redux/ContactFormReducer';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(requestContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {contacts.map(({ name, number, id, phone }) => {\n        return (\n          <Contact\n            key={id}\n            id={id}\n            name={name}\n            number={number || phone}\n          ></Contact>\n        );\n      })}\n    </List>\n  );\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/List/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container, Section } from 'components/Navigation/Navigation.styled';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Div } from './pages.styled/Pages.styled';\n\nconst ContactsPage = () => {\n  const loading = useSelector(selectIsLoading);\n  return (\n    <Section>\n      <Container>\n        <Div>\n          {loading && <Loader />}\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Div>\n      </Container>\n    </Section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FilterLabel","styled","_templateObject","_taggedTemplateLiteral","FilterField","_templateObject2","_templateObject3","Label","Field","SubmitBtn","_templateObject4","Form","_templateObject5","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_useState","useState","number","_useState2","_slicedToArray","setContact","useSelector","dispatch","useDispatch","handleChange","e","_e$target","target","value","prevState","_objectSpread","_defineProperty","_jsxs","onSubmit","preventDefault","some","_ref","alert","concat","addContacts","children","_jsx","htmlFor","onChange","type","pattern","title","required","Filter","_Fragment","setFilter","List","Item","DeleteBtn","Name","Contact","id","phone","onClick","deleteContacts","ContactList","useEffect","requestContacts","map","loading","Section","Container","Div","Loader","ContactForm"],"sourceRoot":""}