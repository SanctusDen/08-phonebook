{"version":3,"file":"static/js/595.02f744db.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/box.tsx","../node_modules/@chakra-ui/system/src/hooks.ts","../node_modules/@chakra-ui/system/src/use-theme.ts","../node_modules/@chakra-ui/system/src/use-style-config.ts","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/react-context/src/index.ts","../node_modules/@chakra-ui/button/src/button-context.ts","../node_modules/@chakra-ui/button/src/button-group.tsx","pages/Home.jsx","../node_modules/react-fast-compare/index.js"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n","import { useColorMode } from \"@chakra-ui/color-mode\"\nimport { Dict, StringOrNumber } from \"@chakra-ui/utils\"\nimport { useTheme } from \"./use-theme\"\n\nexport function useChakra<T extends Dict = Dict>() {\n  const colorModeResult = useColorMode()\n  const theme = useTheme() as T\n  return { ...colorModeResult, theme }\n}\n\nfunction getBreakpointValue<T extends StringOrNumber>(\n  theme: Dict,\n  value: T,\n  fallback: any,\n) {\n  if (value == null) return value\n  const getValue = (val: T) => theme.__breakpoints?.asArray?.[val]\n  return getValue(value) ?? getValue(fallback) ?? fallback\n}\n\nfunction getTokenValue<T extends StringOrNumber>(\n  theme: Dict,\n  value: T,\n  fallback: any,\n) {\n  if (value == null) return value\n  const getValue = (val: T) => theme.__cssMap?.[val]?.value\n  return getValue(value) ?? getValue(fallback) ?? fallback\n}\n\n/**\n * `useToken` is a custom hook used to resolve design tokens from the theme.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-token\n */\nexport function useToken<T extends StringOrNumber | StringOrNumber[]>(\n  scale: string,\n  token: T,\n  fallback?: T,\n) {\n  const theme = useTheme()\n  return getToken(scale, token, fallback)(theme)\n}\n\nexport function getToken<T extends StringOrNumber | StringOrNumber[]>(\n  scale: string,\n  token: T,\n  fallback?: T,\n): (theme: Dict) => T {\n  const _token = Array.isArray(token) ? token : [token]\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback]\n  return (theme: Dict<any>) => {\n    const fallbackArr = _fallback.filter(Boolean) as T[]\n    const result = _token.map((token, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token, fallbackArr[index] ?? token)\n      }\n      const path = `${scale}.${token}`\n      return getTokenValue(theme, path, fallbackArr[index] ?? token)\n    })\n    return Array.isArray(token) ? result : result[0]\n  }\n}\n","import { WithCSSVar } from \"@chakra-ui/styled-system\"\nimport { Dict } from \"@chakra-ui/utils\"\nimport { ThemeContext } from \"@emotion/react\"\nimport { useContext } from \"react\"\n\n/**\n * `useTheme` is a custom hook used to get the theme object from context.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-theme\n */\nexport function useTheme<T extends object = Dict>() {\n  const theme = useContext(\n    ThemeContext as unknown as React.Context<T | undefined>,\n  )\n  if (!theme) {\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\",\n    )\n  }\n\n  return theme as WithCSSVar<T>\n}\n","import {\n  resolveStyleConfig,\n  SystemStyleObject,\n  ThemingProps,\n} from \"@chakra-ui/styled-system\"\nimport { mergeThemeOverride } from \"@chakra-ui/theme-utils\"\nimport {\n  Dict,\n  filterUndefined,\n  memoizedGet as get,\n  mergeWith,\n  omit,\n} from \"@chakra-ui/utils\"\nimport { useRef } from \"react\"\nimport isEqual from \"react-fast-compare\"\nimport { useChakra } from \"./hooks\"\n\ntype StylesRef = SystemStyleObject | Record<string, SystemStyleObject>\n\nfunction useStyleConfigImpl(\n  themeKey: string | null,\n  props: ThemingProps & Dict = {},\n) {\n  const { styleConfig: styleConfigProp, ...rest } = props\n\n  const { theme, colorMode } = useChakra()\n\n  const themeStyleConfig = themeKey\n    ? get(theme, `components.${themeKey}`)\n    : undefined\n\n  const styleConfig = styleConfigProp || themeStyleConfig\n\n  const mergedProps = mergeWith(\n    { theme, colorMode },\n    styleConfig?.defaultProps ?? {},\n    filterUndefined(omit(rest, [\"children\"])),\n  )\n\n  /**\n   * Store the computed styles in a `ref` to avoid unneeded re-computation\n   */\n  const stylesRef = useRef<StylesRef>({})\n\n  if (styleConfig) {\n    const getStyles = resolveStyleConfig(styleConfig)\n    const styles = getStyles(mergedProps)\n\n    const isStyleEqual = isEqual(stylesRef.current, styles)\n\n    if (!isStyleEqual) {\n      stylesRef.current = styles\n    }\n  }\n\n  return stylesRef.current\n}\n\nexport function useStyleConfig(\n  themeKey: string,\n  props: ThemingProps & Dict = {},\n) {\n  return useStyleConfigImpl(themeKey, props) as SystemStyleObject\n}\n\nexport function useMultiStyleConfig(\n  themeKey: string,\n  props: ThemingProps & Dict = {},\n) {\n  return useStyleConfigImpl(themeKey, props) as Record<\n    string,\n    SystemStyleObject\n  >\n}\n\ntype MultipartStyles = Record<string, SystemStyleObject>\n\nexport function useComponentStyles__unstable(\n  themeKey: string,\n  props: ThemingProps & { baseConfig: any },\n) {\n  const { baseConfig, ...restProps } = props\n  const { theme } = useChakra()\n\n  const overrides = theme.components?.[themeKey]\n\n  const styleConfig = overrides\n    ? mergeThemeOverride(overrides, baseConfig)\n    : baseConfig\n\n  return useStyleConfigImpl(null, {\n    ...restProps,\n    styleConfig,\n  }) as MultipartStyles\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import {\n  createContext as createReactContext,\n  useContext as useReactContext,\n} from \"react\"\n\nexport interface CreateContextOptions<T> {\n  strict?: boolean\n  hookName?: string\n  providerName?: string\n  errorMessage?: string\n  name?: string\n  defaultValue?: T\n}\n\nexport type CreateContextReturn<T> = [\n  React.Provider<T>,\n  () => T,\n  React.Context<T>,\n]\n\nfunction getErrorMessage(hook: string, provider: string) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`\n}\n\nexport function createContext<T>(options: CreateContextOptions<T> = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue,\n  } = options\n\n  const Context = createReactContext<T | undefined>(defaultValue)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = useReactContext(Context)\n\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage ?? getErrorMessage(hookName, providerName),\n      )\n      error.name = \"ContextError\"\n      Error.captureStackTrace?.(error, useContext)\n      throw error\n    }\n\n    return context\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<T>\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { ThemingProps } from \"@chakra-ui/system\"\n\nexport interface ButtonGroupContext extends ThemingProps<\"Button\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport const [ButtonGroupProvider, useButtonGroup] =\n  createContext<ButtonGroupContext>({\n    strict: false,\n    name: \"ButtonGroupContext\",\n  })\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonGroupContext, ButtonGroupProvider } from \"./button-context\"\nimport { ButtonGroupOptions } from \"./button-types\"\n\nexport interface ButtonGroupProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Button\">,\n    ButtonGroupOptions {}\n\nconst attachedStyles: Record<string, SystemStyleObject> = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 },\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 },\n  },\n}\n\nconst gapStyles = {\n  horizontal: (spacing: any): SystemStyleObject => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing },\n  }),\n  vertical: (spacing: any): SystemStyleObject => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing },\n  }),\n}\n\nexport const ButtonGroup = forwardRef<ButtonGroupProps, \"div\">(\n  function ButtonGroup(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props\n\n    const _className = cx(\"chakra-button__group\", className)\n\n    const context: ButtonGroupContext = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled],\n    )\n\n    let groupStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      ...(isAttached\n        ? attachedStyles[orientation]\n        : gapStyles[orientation](spacing)),\n    }\n\n    const isVertical = orientation === \"vertical\"\n\n    return (\n      <ButtonGroupProvider value={context}>\n        <chakra.div\n          ref={ref}\n          role=\"group\"\n          __css={groupStyles}\n          className={_className}\n          data-attached={isAttached ? \"\" : undefined}\n          data-orientation={orientation}\n          flexDir={isVertical ? \"column\" : undefined}\n          {...rest}\n        />\n      </ButtonGroupProvider>\n    )\n  },\n)\n\nButtonGroup.displayName = \"ButtonGroup\"\n","import {\n  Box,\n  AbsoluteCenter,\n  Text,\n  ButtonGroup,\n  Center,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { LinkBox, LinkBtn } from './pages.styled/Pages.styled';\n\nconst Home = () => {\n  return (\n    <AbsoluteCenter gap={2}>\n      <Box>\n        <Text fontSize=\"30px\" color=\"#ffb202\">\n          Your All-in-One Contact Management App\n        </Text>\n        <Text fontSize=\"22px\" color=\"white\" width={700}>\n          Welcome to Phonebook, your ultimate solution for organizing, saving,\n          editing, and effortlessly managing all your contacts in one convenient\n          place. Say goodbye to the chaos of scattered contacts and say hello to\n          streamlined communication and effortless accessibility.\n        </Text>\n      </Box>\n      <Center>\n        <ButtonGroup gap={2}>\n          <LinkBox>\n            <LinkBtn href=\"goit-react-hw-08-phonebook/register\" to=\"/register\">\n              Register\n            </LinkBtn>\n            <LinkBtn href=\"goit-react-hw-08-phonebook/login\" to=\"/login\">\n              Login\n            </LinkBtn>\n          </LinkBox>\n        </ButtonGroup>\n      </Center>\n    </AbsoluteCenter>\n  );\n};\n\nexport default Home;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n"],"names":["Box","chakra","displayName","Square","forwardRef","props","ref","size","_props$centerContent","centerContent","rest","styles","display","alignItems","justifyContent","boxSize","__css","flexShrink","flexGrow","borderRadius","useChakra","colorModeResult","useColorMode","theme","useContext","ThemeContext","Error","useTheme","useStyleConfigImpl","themeKey","styleConfigProp","styleConfig","colorMode","themeStyleConfig","get","mergedProps","mergeWith","_a","defaultProps","filterUndefined","omit","stylesRef","useRef","getStyles","resolveStyleConfig","isStyleEqual","isEqual","current","Text","useStyleConfig","omitThemingProps","className","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","p","cx","getErrorMessage","hook","provider","options","name","_options$strict","strict","_options$hookName","hookName","_options$providerName","providerName","errorMessage","defaultValue","Context","createReactContext","context","useReactContext","error","captureStackTrace","Provider","createContext","_createContext2","ButtonGroupProvider","attachedStyles","horizontal","borderEndRadius","borderStartRadius","vertical","borderBottomRadius","borderTopRadius","gapStyles","spacing","marginStart","marginTop","ButtonGroup","colorScheme","variant","_props$spacing","isAttached","isDisabled","_props$orientation","orientation","_className","useMemo","groupStyles","isVertical","value","children","div","role","flexDir","_jsxs","AbsoluteCenter","gap","_jsx","fontSize","color","width","Center","LinkBox","LinkBtn","href","to","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","a","b","constructor","length","i","keys","it","Array","isArray","entries","next","done","has","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","$$typeof","module","exports","message","match","console","warn"],"sourceRoot":""}